@model DAL.DataModels.Product
@{
    ViewData["Title"] = "ProductDetails";
}

<style>
    .custom-product-card {
        margin-top: 20px;
        margin-bottom: 20px;
        border-radius: 8px;
    }

        .custom-product-card .card-body {
            padding: 20px;
        }

        .custom-product-card .thumbnail img {
            cursor: pointer;
            transition: transform 0.3s;
        }

            .custom-product-card .thumbnail img:hover {
                transform: scale(1.1);
            }

        .custom-product-card .image-gallery img {
            cursor: pointer;
            transition: transform 0.3s;
        }

            .custom-product-card .image-gallery img:hover {
                transform: scale(1.05);
            }

        .custom-product-card .product-details {
            padding: 20px;
        }

        .custom-product-card .product-name {
            font-size: 1.5rem;
            font-weight: bold;
        }

        .custom-product-card .product-description {
            margin-top: 10px;
            margin-bottom: 10px;
        }

        .custom-product-card .product-price {
            font-size: 1.2rem;
            color: #007bff;
        }

        .custom-product-card .product-quantity input {
            width: 60px;
            text-align: center;
        }

</style>

<div class="container-fluid ">
    <div class="d-flex justify-content-between mt-3 mx-3">
        <h4>Product Details Page</h4>
        <div class="d-flex justify-content-end">
            <a asp-controller="Home" asp-action="Index" asp-area=""
               class="btn btn-outline-info d-flex align-items-center">
                <span class="material-symbols-outlined"> chevron_left </span> Back
            </a>
        </div>
    </div>
    <div class="container-fluid p-3 custom-product-card bg-white shadow-lg">
        <div class="card-body">
            <div class="row gap-5">
                <div class="col-md-2">
                    <div class="d-flex flex-row flex-md-column gap-3 flex-wrap">
                        @foreach (var item in Model.ProductPhotos)
                        {
                            <div class="thumbnail" onclick="SetMainImage('@Url.Content("~/uploads/" + @item.PhotoName)')">
                                <img src="~/uploads/@item.PhotoName" width="100" />
                            </div>
                        }
                    </div>
                </div>
                <div class="col-md-4 bg-light d-flex align-items-center justify-content-center">
                    <div class="image-gallery">
                        <img id="mainImage" src="~/uploads/@Model.FeaturePhoto" width="800" onclick="OpenModal()" class="img-fluid" />
                    </div>
                </div>
                <div class="col-md-5 mx-3 bg-white">
                    <div class="product-details">
                        <div class="product-name">@Model.ProductName</div>
                        <div class="product-description">@Html.Raw(@Model.Description)</div>
                        <div class="product-price">Price: $@Model.Price</div>
                        <div id="quantity-controls" class="quantity-controls d-none">
                            <button class="btn btn-outline-secondary" onclick="decrementQuantity()">
                                <i class="fas fa-minus"></i>
                            </button>
                            <span id="quantity" class="quantity-display">1</span>
                            <button class="btn btn-outline-secondary" onclick="incrementQuantity()">
                                <i class="fas fa-plus"></i>
                            </button>
                        </div>
                        <button id="add-to-cart" class="btn btn-warning fw-bolder mt-3" onclick="addToCart('@Model.ProductId')">Add to Cart</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>

<script>
    $(document).ready(function () {
        updateUIFromLocalStorage();
        updateAddToCartButton();
    });

    function toggleQuantityControls() {
        $('#quantity-controls').toggleClass('d-none');
        $('#add-to-cart').toggleClass('d-none');
        if (!$('#quantity-controls').hasClass('d-none')) {
            updateUIFromLocalStorage();
        }
    }

    function updateUIFromLocalStorage() {
        console.log("hji")
        let cart = JSON.parse(localStorage.getItem('cart')) || {};
        let productId = '@Model.ProductId';
        console.log(productId)
        if (cart[productId]) {
            console.log("jo")

            let quantity = cart[productId];
            $('#quantity').text(quantity); 
        }
    }

    function incrementQuantity() {
        let quantityElement = document.getElementById('quantity');
        let currentQuantity = parseInt(quantityElement.textContent);
        quantityElement.textContent = currentQuantity + 1;
        updateLocalStorage();
       
    }

    function decrementQuantity() {
        let quantityElement = document.getElementById('quantity');
        let currentQuantity = parseInt(quantityElement.textContent);
        if (currentQuantity > 1) {
            quantityElement.textContent = currentQuantity - 1;
            updateLocalStorage();
        } else {
            let productId = '@Model.ProductId';
            let cart = JSON.parse(localStorage.getItem('cart')) || {};
            delete cart[productId];
            localStorage.setItem('cart', JSON.stringify(cart));
            toggleQuantityControls();
            var products = JSON.parse(localStorage.getItem('cart'));
            console.log(products)
            var count = products ? Object.keys(products).length : 0;
            console.log(count)
            $('#cartCount').text(count);
            
        }
       
    }

    function updateLocalStorage() {
        let productId = '@Model.ProductId';
        let quantity = parseInt($('#quantity').text());
        let cart = JSON.parse(localStorage.getItem('cart')) || {};
        cart[productId] = quantity;
        localStorage.setItem('cart', JSON.stringify(cart));
    }

 
    function addToCart(productId) {
        let cart = JSON.parse(localStorage.getItem('cart')) || {};
        let currentQuantity = cart[productId] || 0;
        if (currentQuantity === 0) {
            cart[productId] = 1;
            localStorage.setItem('cart', JSON.stringify(cart));
        }
        var products = JSON.parse(localStorage.getItem('cart'));
        console.log(products)
        var count = products ? Object.keys(products).length : 0;
        console.log(count)
        $('#cartCount').text(count);
      
        toggleQuantityControls();
        updateAddToCartButton();
    }
    function updateAddToCartButton() {
        let cart = JSON.parse(localStorage.getItem('cart')) || {};
        let productId = '@Model.ProductId';
        if (cart[productId]) {
            $('#add-to-cart').addClass('d-none');
            $('#quantity-controls').removeClass('d-none');
            let quantity = cart[productId];
            $('#quantity').text(quantity);
        } else {
            $('#add-to-cart').removeClass('d-none');
            $('#quantity-controls').addClass('d-none');
            $('#quantity').text('1');
        }

    }

</script>



<script>
    // function addToCart(ProductId) {
    //     console.log(ProductId)
    //     let cart = JSON.parse(localStorage.getItem('cart'));


    //     if (!Array.isArray(cart)) {
    //         cart = [];
    //     }
    //     const productIndex = cart.findIndex(item => item === ProductId);
    //     if (productIndex === -1) {
    //         cart.push(ProductId);
    //         localStorage.setItem('productId', JSON.stringify(cart));
    //         $.ajax({
    //             method: "POST",
    //             url: "/Home/CartViewBag",
    //             success: function (data) {
    //                 var products = JSON.parse(localStorage.getItem('cart'));
    //                 var count = products ? products.length : 0;
    //                 $('#cartCount').text(count);
    //             }
    //         })
    //     }
    //     window.location = '/Home/AddToCart'
    // }
    document.addEventListener('DOMContentLoaded', (event) => {
        function SetMainImage(imageSrc) {
            document.getElementById('mainImage').src = imageSrc;
        }



        function OpenModal() {
            const mainImageSrc = document.getElementById('mainImage').src;
            var modifiedUrl = decodeURIComponent(mainImageSrc.replace('https://localhost:7290', ''));
            console.log(modifiedUrl)
            const modal = $('#imageModal');
            const carouselItems = $('#carousel-inner .carousel-item');
            carouselItems.removeClass('active');

            carouselItems.each(function (index, element) {
                console.log($(element).find('img').attr('src'))
                if ($(element).find('img').attr('src') === modifiedUrl) {
                    console.log("hiifromhere")
                    $(element).addClass('active');
                }
            });

            modal.modal('show');
        }

        window.SetMainImage = SetMainImage;
        window.OpenModal = OpenModal;

        document.querySelectorAll('.thumbnail').forEach((div) => {
            div.addEventListener('click', function () {
                SetMainImage(this.querySelector('img').src);
            });
        });

        document.getElementById('mainImage').addEventListener('click', function () {
            OpenModal();
        });
    });
</script>

<style>
    .thumbnail {
        cursor: pointer;
    }
</style>
<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<div id="imageModal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="carouselExample" class="carousel slide" data-ride="carousel">
                    <div class="carousel-inner" id="carousel-inner">
                        @foreach (var item in Model.ProductPhotos)
                        {
                            <div class="carousel-item">
                                <img src="~/uploads/@item.PhotoName" class="d-block w-100">
                            </div>
                        }
                    </div>
                    <a class="carousel-control-prev" href="#carouselExample" role="button" data-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="sr-only">Previous</span>
                    </a>
                    <a class="carousel-control-next" href="#carouselExample" role="button" data-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="sr-only">Next</span>
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>