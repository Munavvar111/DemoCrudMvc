@model List<DAL.DataModels.Product>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
<style>
    .card-container {
        background-color: #fff;
        transition: transform 0.3s;
    }

        .card-container:hover {
            transform: scale(1.02);
        }

    .card-image {
        height: 200px;
        overflow: hidden;
    }

    .image-slider {
        display: flex;
        flex-wrap: nowrap;
        width: 100%;
    }

    .slider-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: opacity 0.3s ease-in-out;
    }

        .slider-image.active {
            opacity: 1;
        }

    .card-inner {
        flex: 1;
    }

    .text-dark {
        font-weight: 600;
    }

    .price {
        font-size: 1.2rem;
    }

    .cart {
        cursor: pointer;
    }

    .quantity-controls {
        display: flex;
        align-items: center;
    }

    .quantity-display {
        font-size: 1.1rem;
        font-weight: 600;
    }

    .alert-danger {
        font-size: 0.9rem;
        padding: 0.5rem;
    }
</style>

<div class="container-fluid mt-4 ">

    <div class="row gap-5 justify-content-center">
        @foreach (var product in Model)
        {
            <div class="card-container d-flex flex-column border border-2 rounded-2 shadow-lg col-md-4 p-0" style="max-width: 250px;">
                <a asp-action="ProductDetails" asp-controller="Home" asp-route-id="@product.ProductId" style="text-decoration:none">
                    <div class="card-image">
                        <div class="image-slider" id="slider-@product.ProductId">
                            @foreach (var photo in product.ProductPhotos)
                            {
                                <img class="slider-image img-fluid @(photo == product.ProductPhotos.First() ? "active" : "")" src="~/uploads/@photo.PhotoName" alt="@product.ProductName">
                            }
                        </div>
                    </div>
                </a>
                <div class="card-inner p-3 text-center">
                    @if (product.Quantity == 0)
                    {
                        <div class="alert alert-danger text-center" role="alert">
                            Out of Stock
                        </div>
                    }
                    <a asp-action="ProductDetails" asp-controller="Home" asp-route-id="@product.ProductId" style="text-decoration:none">
                        <span class="text-muted d-block">@product.Category.CategoryName</span>
                        <h5 class="mb-0 text-dark">@product.ProductName</h5>
                        <div class="price mt-2">
                            <span class="text-primary h4">$@product.Price</span>
                        </div>
                    </a>
                    <div class="mt-3 d-flex justify-content-center align-items-center">
                        @if (product.Quantity == 0)
                        {
                            <span class="text-danger">Unavailable</span>
                        }
                        else
                        {
                            <div>
                                <span id="cart-@product.ProductId" class="bg-success d-flex justify-content-center align-items-center fs-4 rounded-circle pe-auto cart" onclick="changeCart(@product.ProductId, @product.Quantity)" style="width: 40px; height: 40px;">
                                    <i class="fa fa-shopping-cart text-white"></i>
                                </span>
                            </div>

                            <div id="quantity-controls-@product.ProductId" class="quantity-controls d-none ms-3">
                                <button class="btn btn-outline-secondary btn-sm" onclick="decrementQuantity(@product.ProductId, @product.Quantity)">
                                    <i class="fas fa-minus"></i>
                                </button>
                                <span id="quantity-@product.ProductId" class="quantity-display mx-2">1</span>
                                <button class="btn btn-outline-secondary btn-sm" onclick="incrementQuantity(@product.ProductId, @product.Quantity)">
                                    <i class="fas fa-plus"></i>
                                </button>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>

</div>
<script>
    if (true) {

    $(document).ready(function () {
        // Check if the item is in the cart and update the UI accordingly
        updateUIFromLocalStorage();

        $('.card-container').hover(
            function () {
                // On mouse enter
                $('.card-container').addClass('blur');
                $(this).removeClass('blur').addClass('focus');
            },
            function () {
                // On mouse leave
                $('.card-container').removeClass('blur focus');
            }
        );
    });

    function updateUIFromLocalStorage() {
        let cart = JSON.parse(localStorage.getItem('cart')) || {};
        Object.keys(cart).forEach(productId => {
            const quantity = cart[productId];
            const cartElement = document.getElementById(`cart-${productId}`);
            const quantityControls = document.getElementById(`quantity-controls-${productId}`);
            const quantityElement = document.getElementById(`quantity-${productId}`);
            if (quantity > 0) {
                // Update displayed quantity
                quantityElement.textContent = quantity;
                cartElement.classList.add('d-none');
                quantityControls.classList.remove('d-none');
            }

        });
    }

    // if (true) {
    //     const sliders = document.querySelectorAll('.image-slider');

    //     sliders.forEach(slider => {
    //         let currentIndex = 0;
    //         const images = slider.querySelectorAll('.slider-image');
    //         const totalImages = images.length;

    //         setInterval(() => {
    //             images[currentIndex].classList.remove('active');
    //             currentIndex = (currentIndex + 1) % totalImages;
    //             images[currentIndex].classList.add('active');
    //         }, 4000);
    //     });
    // }
    // Initialize cart object
    let cart = {};

        function changeCart(productId, maxQuantity) {
            document.getElementById(`cart-${productId}`).classList.add('d-none');
            const quantityControls = document.getElementById(`quantity-controls-${productId}`);
            const quantityElement = document.getElementById(`quantity-${productId}`);
            let quantity = parseInt(quantityElement.textContent);

            // Check if the product is already in the cart
            let cart = JSON.parse(localStorage.getItem('cart')) || {};
            if (!cart[productId]) {
                // If the product is not in the cart, set quantity to one
                quantity = 1;
                
            }

            // Update the UI based on the quantity
            quantityElement.textContent = quantity;

            // Perform AJAX call or other necessary operations
            

            // Toggle visibility of quantity controls
            if (!quantityControls.classList.contains('d-none') && quantity > 0) {
                quantityControls.classList.add('d-none');
            } else {
                quantityControls.classList.toggle('d-none');
            }

            // Update local storage with the new quantity
            cart[productId] = quantity;
            localStorage.setItem('cart', JSON.stringify(cart));
            var products = JSON.parse(localStorage.getItem('cart'));
            console.log(products)
            var count = products ? Object.keys(products).length : 0;
            console.log(count)
            $('#cartCount').text(count);
        }


    function incrementQuantity(productId, maxQuantity) {
        const quantityElement = document.getElementById(`quantity-${productId}`);
        let quantity = parseInt(quantityElement.textContent);

        if (quantity < maxQuantity) {
            quantity++;
            quantityElement.textContent = quantity;
            updateLocalStorage(productId, quantity);
        }
       
    }

    function decrementQuantity(productId, maxQuantity) {
        const quantityElement = document.getElementById(`quantity-${productId}`);
        let quantity = parseInt(quantityElement.textContent);

        if (quantity > 1) {
            quantity--;
            quantityElement.textContent = quantity;
            updateLocalStorage(productId, quantity);
        } else if (quantity === 1) {
            // Hide the quantity controls if the quantity reaches 0
            const quantityControls = document.getElementById(`quantity-controls-${productId}`);
            quantityControls.classList.add('d-none');
            updateLocalStorage(productId, 0); // Remove the item from local storage
            document.getElementById(`cart-${productId}`).classList.remove('d-none');
                var products = JSON.parse(localStorage.getItem('cart'));
                console.log(products)
                var count = products ? Object.keys(products).length : 0;
                console.log(count)
                $('#cartCount').text(count);
        }
       
    }

    function updateLocalStorage(productId, quantity) {
        let cart = JSON.parse(localStorage.getItem('cart')) || {};
        if (quantity > 0) {
            cart[productId] = quantity;
        } else {
            delete cart[productId];
        }
        localStorage.setItem('cart', JSON.stringify(cart));
    }
    }



</script>
